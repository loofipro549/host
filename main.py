from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton

API_TOKEN = "8474431519:AAG07_LjJlq9ExZ2tigtYpip6AD_RO5Fk-0"
CHANNEL_ID = "@Garant801" 

bot = Bot(token=API_TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.row("üéü –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á", "üí¨ –û—Ç–∑—ã–≤—ã")
main_kb.row("üìå –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "üõ† –¢–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
main_kb.row("üåê –°–æ–∑–¥–∞—Ç—å —Å–∫–∞–º —Å—Å—ã–ª–∫—É",)
main_kb.row("üîë –í–≤–µ—Å—Ç–∏ –∫–ª—é—á")

# –ú–µ–Ω—é –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏
error_kb = ReplyKeyboardMarkup(resize_keyboard=True)
error_kb.row("üéü –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á", "üí¨ –û—Ç–∑—ã–≤—ã")
error_kb.row("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")

@dp.message_handler(commands=["start"])
async def start_cmd(message: types.Message):
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("üì¢ –ö–∞–Ω–∞–ª 1", url=f"https://t.me/{CHANNEL_ID.replace('@','')}"))
    kb.add(InlineKeyboardButton("‚úÖ –ü–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_sub"))
    await message.answer(
        "‚ö†Ô∏è <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.</b>",
        reply_markup=kb
    )

@dp.callback_query_handler(lambda c: c.data == "check_sub")
async def check_subscription(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    try:
        member = await bot.get_chat_member(CHANNEL_ID, user_id)
        if member.status in ["member", "administrator", "creator"]:
            await callback.message.answer(
                "üëã <b>–ó–¥–∞—Ä–æ–≤–∞!</b>\n\n"
                "–Ø —è–≤–ª—è—é—Å—å –¥–µ—Ç–∏—â–µ–º —á—É–≤–∞–∫–∞ —Å –Ω–∏–∫–æ–º <b>FuryLink‚ô•Ô∏è</b>\n"
                "–û–±–ª–µ–≥—á—É —Ç–µ–±–µ –∂–∏–∑–Ω—åüëåüèª –£–¥–∞—á–∏!\n\n"
                "‚û°Ô∏è –í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç:",
                reply_markup=main_kb
            )
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞! –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å.", show_alert=True)
    except:
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏.", show_alert=True)

# --- –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á ---
@dp.message_handler(lambda m: m.text == "üéü –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á")
async def buy_key(message: types.Message):
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç—å", url="https://t.me/Garant8010"))
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"))
    await message.answer(
        "üéü <b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –í–∞–º —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:</b>\n\n"
        "- üåê –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–∞–º —Å—Å—ã–ª–∫–∏\n"
        "- üéÆ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ IOS, android –∏ BlueStacks\n"
        "- üîì –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞",
        reply_markup=kb
    )

# --- –û—Ç–∑—ã–≤—ã ---
@dp.message_handler(lambda m: m.text == "üí¨ –û—Ç–∑—ã–≤—ã")
async def reviews(message: types.Message):
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"))
    await message.answer("üí¨ <b>–ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã:</b>\nhttps://t.me/Garant801", reply_markup=kb)

# --- –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã ---
@dp.message_handler(lambda m: m.text == "üìå –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
async def faq(message: types.Message):
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"))
    await message.answer(
        "–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ãüìå\n\n"
        "1. –ß—Ç–æ —è –ø–æ–ª—É—á—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã‚ùì\n"
        "- –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–≤–∞ —Ñ–∞–π–ª–∞ (Ipa, Apk)\n"
        "Ipa –Ω–∞ iOS, Apk –Ω–∞ Android, –≤–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º, "
        "–∞ —Ç–∞–∫–∂–µ —Å–∞–º –∫–ª—é—á –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–º–∏—É–º–∞ –≤ –±–æ—Ç–µ –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫üìé\n\n"
        "2. –£ –º–µ–Ω—è –∞–π—Ñ–æ–Ω, —Å–º–æ–≥—É –ª–∏ —è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ç–æ–∫–µ–Ω–∞‚ùì\n"
        "- –î–ê! –≠—Ç–æ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ, –Ω–∏–∫–∞–∫–æ–π –°–∫–∞—Ä–ª–µ—Ç –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è üëç\n\n"
        "3. –ß—Ç–æ –¥–∞—ë—Ç –ø—Ä–µ–º–∏—É–º –≤ –±–æ—Ç–µ‚ùì\n"
        "- –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å–∫–∞–º —Å—Å—ã–ª–æ–∫ –∏ –ø–æ–ª—É—á–µ–Ω–∏—é —Ç–æ–∫–µ–Ω–∞ –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ —Å—Ç–∞–Ω–¥–æ—Ñ—Ñ üåê\n\n"
        "4. –ë–∞–Ω—è—Ç –ª–∏ –∑–∞ —ç—Ç–æ –≤ —Å—Ç–∞–Ω–¥–æ—Ñ—Ñ–µ‚ùì\n"
        "- –ù–ï–¢! –ë–∞–Ω –∑–∞ —Ç–æ, —á—Ç–æ –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ —Å–∫–∞–º —Å—Å—ã–ª–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ —Å–µ–±–µ –≥–æ–ª–¥—É –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –¥–∞—ë—Ç—Å—è ‚ô•Ô∏è\n\n"
        "5. –ì–¥–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—ã‚ùì\n"
        "- –¶–µ–Ω—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –±–æ—Ç–µ, –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ö–ª—é—áüí≥¬ª\n\n"
        "6. –Ø –æ–ø–ª–∞—Ç–∏–ª –∏ –º–Ω–µ –¥–∞–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∫–ª—é—á, —á—Ç–æ —ç—Ç–æ‚ùì\n"
        "- –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª ¬´–í–≤–µ—Å—Ç–∏ –∫–ª—é—áüîë¬ª\n\n"
        "7. –Ø —Ö–æ—á—É –∫—É–ø–∏—Ç—å, –Ω–æ –≤–¥—Ä—É–≥ —Å–∫–æ—Ä–æ –æ–±–Ω–æ–≤–∞, –∫–∞–∫ –±—ã—Ç—å‚ùì\n"
        "- –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ø–∞–¥–∞–µ—Ç–µ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏ –µ—Å–ª–∏ –≤—ã–π–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, "
        "—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ë–ï–°–ü–õ–ê–¢–ù–û ‚ô•Ô∏è\n\n"
        "8. –Ø —É–≤–∏–¥–µ–ª –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤ –≤–∏–¥–µ–æ-—Ä–æ–ª–∏–∫–µ, –Ω–æ –æ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å‚ùì\n"
        "- –í—Å–µ –∫–ª—é—á–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ. –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏ –Ω–µ –≤—ã–¥–∞—é—Ç—Å—è. "
        "–ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–≤–æ–π –∫–ª—é—á, –Ω–∞–∂–º–∏—Ç–µ –≤ –±–æ—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é > –ö–ª—é—á üéüÔ∏è\n\n"
        "9. –í –¥–µ–Ω—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–æ 10 —Å–∫–∞–º —Å—Å—ã–ª–æ–∫. 1 —Å—Å—ã–ª–∫–∞ = 1 –º–∞–º–æ–Ω—Ç üëæ\n\n"
        "10. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ç–æ–∫–µ–Ω–∞ –∏ –∫–ª—é—á –¥–ª—è –±–æ—Ç–∞ üîì\n\n"
        "11. –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É ‚öôÔ∏è\n\n"
        "12. –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 1 —á–∞—Å –∏–ª–∏ –Ω–∞ 1 –¥–µ–Ω—å –Ω–µ –ø—Ä–æ–¥–∞—é—Ç—Å—è ‚ùóÔ∏è",
        reply_markup=kb
    )

# --- –¢–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ---
@dp.message_handler(lambda m: m.text == "üõ† –¢–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support(message: types.Message):
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"))
    await message.answer("üõ† <b>–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @Garant8010", reply_markup=kb)

# --- –°–æ–∑–¥–∞—Ç—å —Å–∫–∞–º —Å—Å—ã–ª–∫—É ---
@dp.message_handler(lambda m: m.text == "üåê –°–æ–∑–¥–∞—Ç—å —Å–∫–∞–º —Å—Å—ã–ª–∫—É")
async def scam_link(message: types.Message):
    await message.answer(
        "üö´ <b>–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–∞–º —Å—Å—ã–ª–∫–∏</b>\n\n"
        "–£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∞, –¥–ª—è –µ—ë –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á üîë\n\n"
        "üåê –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–∞–º —Å—Å—ã–ª–∫–∏ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ ‚ô•Ô∏è",
        reply_markup=error_kb
    )

# --- –í–≤–µ—Å—Ç–∏ –∫–ª—é—á ---
BACK_TEXT = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
user_states = {}  # user_id -> "awaiting_key" | None

@dp.message_handler(lambda m: m.text == "üîë –í–≤–µ—Å—Ç–∏ –∫–ª—é—á")
async def enter_key(message: types.Message):
    user_states[message.from_user.id] = "awaiting_key"
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(BACK_TEXT)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —á–∞—Ç üëá", reply_markup=kb)

@dp.message_handler(lambda m: user_states.get(m.from_user.id) == "awaiting_key")
async def check_key(message: types.Message):
    # 1) –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –ù–∞–∑–∞–¥ ‚Äî –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –≤–≤–æ–¥–∞ –∫–ª—é—á–∞
    if message.text == BACK_TEXT:
        user_states[message.from_user.id] = None
        await message.answer("‚¨ÖÔ∏è –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_kb)
        return

    # 2) –∏–Ω–∞—á–µ —ç—Ç–æ –ø–æ–ø—ã—Ç–∫–∞ –≤–≤–µ—Å—Ç–∏ –∫–ª—é—á
    CORRECT_KEY = "SECRET123"  # –ø–æ–º–µ–Ω—è–π—Ç–µ –Ω–∞ —Å–≤–æ–π
    if message.text.strip() == CORRECT_KEY:
        user_states[message.from_user.id] = None
        await message.answer("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!", reply_markup=main_kb)
    else:
        await message.answer("‚ùå –í–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥")
        
# --- –ù–∞–∑–∞–¥ ---
@dp.message_handler(lambda m: m.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_reply(message: types.Message):
    await message.answer("‚¨ÖÔ∏è –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_kb)

@dp.callback_query_handler(lambda c: c.data == "back")
async def back_menu(callback: types.CallbackQuery):
    await callback.message.answer("‚¨ÖÔ∏è –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_kb)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
